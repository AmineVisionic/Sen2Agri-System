/*
 * This file was generated by qdbusxml2cpp version 0.8
 * Command line was: qdbusxml2cpp -a ProcessorsExecutorAdapter -p ProcessorsExecutorProxy org.esa.sen2agri.processorsExecutor.xml
 *
 * qdbusxml2cpp is Copyright (C) 2013 Digia Plc and/or its subsidiary(-ies).
 *
 * This is an auto-generated file.
 * Do not edit! All changes made to it will be lost.
 */

#ifndef PROCESSORSEXECUTORPROXY_H_1433344693
#define PROCESSORSEXECUTORPROXY_H_1433344693

#include <QtCore/QObject>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>
#include <QtDBus/QtDBus>

/*
 * Proxy class for interface org.esa.sen2agri.processorsExecutor
 */
class OrgEsaSen2agriProcessorsExecutorInterface: public QDBusAbstractInterface
{
    Q_OBJECT
public:
    static inline const char *staticInterfaceName()
    { return "org.esa.sen2agri.processorsExecutor"; }

public:
    OrgEsaSen2agriProcessorsExecutorInterface(const QString &service, const QString &path, const QDBusConnection &connection, QObject *parent = 0);

    ~OrgEsaSen2agriProcessorsExecutorInterface();

public Q_SLOTS: // METHODS
    inline QDBusPendingReply<bool> ExecuteProcessor(const QString &jsonCfgStr)
    {
        QList<QVariant> argumentList;
        argumentList << QVariant::fromValue(jsonCfgStr);
        return asyncCallWithArgumentList(QLatin1String("ExecuteProcessor"), argumentList);
    }

    inline QDBusPendingReply<bool> StopProcessorJob(const QString &jobName)
    {
        QList<QVariant> argumentList;
        argumentList << QVariant::fromValue(jobName);
        return asyncCallWithArgumentList(QLatin1String("StopProcessorJob"), argumentList);
    }

Q_SIGNALS: // SIGNALS
};

namespace org {
  namespace esa {
    namespace sen2agri {
      typedef ::OrgEsaSen2agriProcessorsExecutorInterface processorsExecutor;
    }
  }
}
#endif
